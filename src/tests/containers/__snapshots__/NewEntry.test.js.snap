// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`New entry UI render features container should render as expected 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "testKey",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "testKey",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <_default>
      <Provider
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <Connect(withRouter(NewEntry))>
          <withRouter(NewEntry)
            clearError={[Function]}
            createEntry={[Function]}
            errorMessage=""
          >
            <Route>
              <NewEntry
                clearError={[Function]}
                createEntry={[Function]}
                errorMessage=""
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  }
                }
                match={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
              >
                <div
                  className="bg body"
                >
                  <header
                    className="header2"
                  >
                    <nav>
                      <ul
                        className="nav nav2"
                      >
                        <li>
                          <Link
                            replace={false}
                            to="/"
                          >
                            <a
                              href="/"
                              onClick={[Function]}
                            >
                              Home
                            </a>
                          </Link>
                        </li>
                        <li>
                          <Link
                            replace={false}
                            to="/profile"
                          >
                            <a
                              href="/profile"
                              onClick={[Function]}
                            >
                              Profile
                            </a>
                          </Link>
                        </li>
                        <li>
                          <Link
                            id="logout"
                            onClick={[Function]}
                            replace={false}
                            to="/"
                          >
                            <a
                              href="/"
                              id="logout"
                              onClick={[Function]}
                            >
                              Sign Out
                            </a>
                          </Link>
                        </li>
                      </ul>
                    </nav>
                  </header>
                  <section
                    className="signup"
                    id="messageBox"
                  >
                    <div
                      className="box span31 span3-center card"
                    >
                      <h2>
                        Add Diary Entry 
                      </h2>
                      <form
                        id="addEntry"
                        onSubmit={[Function]}
                      >
                        <div
                          className="fullspan"
                        >
                          <label
                            htmlFor="title"
                          >
                            Title:
                          </label>
                        </div>
                        <div
                          className="fullspan"
                        >
                          <input
                            id="title"
                            name="title"
                            onChange={[Function]}
                            placeholder="Entry title"
                            required={true}
                            type="text"
                          />
                        </div>
                        <div
                          className="fullspan"
                        >
                          <label
                            htmlFor="textarea"
                          >
                            Express Yourself:
                          </label>
                        </div>
                        <div
                          className="fullspan"
                        >
                          <textarea
                            id="textarea"
                            name="textarea"
                            onChange={[Function]}
                            required={true}
                            rows="10"
                          />
                        </div>
                        <input
                          type="submit"
                          value="Add Entry"
                        />
                      </form>
                    </div>
                  </section>
                </div>
              </NewEntry>
            </Route>
          </withRouter(NewEntry)>
        </Connect(withRouter(NewEntry))>
      </Provider>
    </_default>
  </Router>
</MemoryRouter>
`;
